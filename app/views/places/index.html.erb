<% @start_item = 0 if @start_item.nil? %>

<% unless request.xhr? %>
    <% if current_tab == :search && params[:q].nil? %>
	<% content_for :before_content do %>
	    <div class="searchbox">
		    <% form_tag country_region_locality_places_path(@country, @region, @locality), :method => :get do %>
			    <fieldset>
				<input id="q" name="q" placeholder="search" type="text" />
				<input id="submit" type="hidden" />
			    </fieldset>
		    <% end %>
	    </div>
	<% end %>
    <% end %>
<% end %>

<% unless request.xhr? %>
    <% if current_tab == :location && @lat.nil? && @lng.nil? %>
	<script type="text/javascript">
	    //<![CDATA[
		jQuery(document).ready(function() {
		    // Detect location.
		    jQuery.geolocation.find(function(location) {
			var latlng = location.latitude + "," + location.longitude;
			jQuery("#geostatus span").html("Location acquired, getting places...")
			window.location = window.location + "&geo=" + latlng;
		    },
		    // error function
		    function() {
			jQuery("#geostatus span").html("Error getting your location.")
		    },
		    highAccuracy: true)
		});
	    //]]>
	</script>
    <% end %>
<% end %>

<% unless request.xhr? %><ul><% end %>
    <% unless request.xhr? %>
	<% if !params[:fare].nil? || !params[:neighborhood].nil? || !params[:q].nil? %>
	    <li class="filters">
		<% unless params[:fare].nil? %>
		    <%= link_to h(params[:fare]), country_region_locality_places_path(@country.id, @region.id, @locality.id, :start_item => params[:start_item], :fare => nil, :neighborhood => params[:neighborhood]) %>
		<% end %>
		<% unless params[:neighborhood].nil? %>
		    <%= link_to h(Neighborhood.get(params[:neighborhood])["title"]), country_region_locality_places_path(@country.id, @region.id, @locality.id, :start_item => params[:start_item], :fare => params[:fare], :neighborhood => nil) %>
		<% end %>
		<% unless params[:q].nil? %>
		    <%= link_to h(params[:q]), country_region_locality_places_path(@country.id, @region.id, @locality.id, :start_item => nil, :q => nil) %>
		<% end %>
	    </li>
	<% end %>
    <% end %>

    <% if params[:geo].nil? %>
	<%= render :partial => "place", :collection => @places, :locals => { :view_mode => :compact, :country => @country, :region => @region, :locality => @locality } %>
    <% else %>
	<!-- geo requires iterating the array since it's sorted by distance away -->
	<% if !@places.nil? %>
		<%= render :partial => "place", :collection => @places, :locals => { :view_mode => :compact, :country => @country, :region => @region, :locality => @locality } %>
	<% end %>
    <% end %>

    <% if current_tab == :location && @lat.nil? && @lng.nil? %>
	<li class="small-variable" id="geostatus"><span class="stdtext">Finding your location, please wait...</span></li>
    <% end %>

    <% if !@places_count.nil? && @places_count > (@start_item + 10) && @lat.nil? && @lng.nil? %>
	<li class="alt nextbtn">
	    <% link_to country_region_locality_places_path(@country.id, @region.id, @locality.id, :start_item => (@start_item + 10), :fare => params[:fare], :neighborhood => params[:neighborhood], :q => params[:q]), :class => "noeffect" do %>
		<span class="name">More</span>
	    <% end %>
	</li>
    <% elsif !@lat.nil? && !@lng.nil? %>
	<li class="alt nextbtn-noajax">
	    <% link_to country_region_locality_places_path(@country, @region, @locality, :tab => "location", :geo => "#{@lat},#{@lng}", :radius => (@radius * 2.0)) do %>
		<span class="name">
		    Increase search radius to <%= (@radius * 2.0).to_i %>mi
		</span>
	    <% end %>
	</li>
    <% end %>
<% unless request.xhr? %></ul><% end %>
