<script type="text/javascript">
    // global variables
    var last_dtstart = "";
    var last_dtend = "";

    // Handles the dtend checkbox
    function event_dtend_disable_handler() {
	var chkDtEnd = $('event_dtend_disable');
	var txtDtEnd = $('event_dtend');
	if (chkDtEnd.readAttribute("checked") == "checked") {
	    txtDtEnd.writeAttribute("disabled", "disabled");
	}
    }

    // call our server and check dtstart/dtend
    function event_time_ajax(start_or_end) {
	if (start_or_end == "start") {
	    var current_dtstart = $F('event_dtstart');
	} else {
	    var current_dtend = $F('event_dtend');
	}

	// only do Ajax calls if the current time != last time
	if ( (start_or_end == "start" && last_dtstart != current_dtstart) || (start_or_end == "end" && last_dtend != current_dtend) ) {
	    if (start_or_end == "start") {
		var params = { "time": current_dtstart };
		last_dtstart = $F('event_dtstart');
	    } else {
		var params = { "time": current_dtend };
		last_dtend = $F('event_dtend');
	    }
	    
	    new Ajax.Request('<%= url_for(:controller => "events", :action => "ajax_parse_time") %>', {
		parameters: params,
		method: "get",
		onSuccess: function(response) {
		    var parsed_time = response.responseJSON();
		    if (parsed_time.error == "0") {
			$('event_dt' + start_or_end + '_parsed').textContent = parsed_time.friendly_date;
			var box = $('event_dt' + start_or_end);
			box.setStyle({ backgroundColor: "#e4f7e5", border: "1px solid #0b6111" });

			if (start_or_end == "start") {
			    // next handle the recurrence...
			    $('recurrence_rate_yearly_help').textContent = parsed_time.recurrence_yearly;
			    $('recurrence_rate_monthly_help').textContent = parsed_time.recurrence_monthly;
			    $('recurrence_rate_monthly_nth_nday_help').textContent = parsed_time.recurrence_monthly_nth_nday;
			    $('recurrence_rate_weekly_help').textContent = parsed_time.recurrence_weekly;
			}
		    } else {
			$('event_dt' + start_or_end + '_parsed').textContent = "";
			var box = $('event_dt' + start_or_end);
			box.setStyle({ backgroundColor: "#F7E5E4", border: "1px solid #610B23" });

			if (start_or_end == "start") {
			    // next handle the recurrence...
			    $('recurrence_rate_yearly_help').textContent = "";
			    $('recurrence_rate_monthly_help').textContent = "";
			    $('recurrence_rate_monthly_nth_nday_help').textContent = "";
			    $('recurrence_rate_weekly_help').textContent = "";
			}
		    }
		},
		onFailure: function(response) {
		    $("event_dt" + start_or_end + "_parsed").textContent = "Error contacting server.";
		}
	    });
	}
    }

    function event_dtstart_ajax() { return event_time_ajax("start"); }
    function event_dtend_ajax() { return event_time_ajax("end"); }

    // script that runs every 1s to process dtstart
    new PeriodicalExecuter(event_dtstart_ajax, 1.0);
    new PeriodicalExecuter(event_dtend_ajax, 1.0);
</script>
<% 
url = []
if params[:place_id]
    if params[:id]
	url = country_state_city_place_event_path(params[:country_id], params[:state_id], params[:city_id], params[:place_id], params[:id])
    else
	url = country_state_city_place_events_path(params[:country_id], params[:state_id], params[:city_id], params[:place_id])
    end
elsif params[:city_id]
    if params[:id]
	url = country_state_city_event_path(params[:country_id], params[:state_id], params[:city_id], params[:id])
    else
	url = country_state_city_events_path(params[:country_id], params[:state_id], params[:city_id])
    end
end
%>
<% form_for @event, :url => url, :html => { :class => "basic" } do |f| %>
    <%= f.error_messages({ :header_message => nil, :class => "msg msg-error" }) %>

    <dl>
	<dt><%= f.label :summary, "Summary" %></dt>
	<dd><%= f.text_field :summary %></dd>

	<dt><%= f.label :description, "Description" %></dt>
	<dd><%= f.text_area :description %></dd>

	<dt><%= f.label :start_time, "Start Time" %></dt>
	<dd>
	    <p><%= f.text_field :start_time %></p>
	    <div id="event_dtstart_parsed">Type in a time such as "Monday at 5pm" or "Jan 6 2009 at 3pm".</div>
	</dd>
	<dt><%= f.label :end_time, "End Time" %></dt>
	<dd>
	    <p><%= f.check_box :no_end_time, :onchange => "event_dtend_disable_handler();" %> <%= f.label :no_end_time, "This event does not have a specified ending time." %></p>
	    <p><%= f.text_field :end_time %></p>
	    <div id="event_dtend_parsed">Type in a time such as "Monday at 5pm" or "Jan 6 2009 at 3pm"</div>
	</dd>
	<dt><%= f.label :recurrence, "Recurrence" %></dt>
	<dd>
	    <%= render :partial => "recurrence_selector" %>
	</dd>
    </dl>

    <% if [:create, :new].include? params[:method].to.sym %>
	<%= f.submit "Add Happening" %>
    <% elsif [:update, :edit].include? params[:method].to_sym %>
	<%= f.submit "Edit Happening" %>
    <% end %>
<% end %>