<script type="text/javascript">
	// global variables
	var last_dtstart = "";
	var last_dtend = "";

	// NB: the getters and setters are only supported in FBJS

	// Handles the dtend checkbox
	function event_dtend_disable_handler() {
		chkDtEnd = document.getElementById('event_dtend_disable');
		txtDtEnd = document.getElementById('event_dtend');
		txtDtEnd.setDisabled(chkDtEnd.getChecked());
	}

	// call our server and check dtstart
	function event_dtstart_ajax() {
		current_dtstart = document.getElementById('event_dtstart').getValue();

		// only do Ajax calls if the current dtstart != the last dtstart
		if (last_dtstart != current_dtstart) {
			var ajax = new Ajax();
			var params = { "time": current_dtstart };
			last_dtstart = document.getElementById('event_dtstart').getValue();
			ajax.responseType = Ajax.JSON;
			ajax.onerror =
				function(error) {
					document.getElementById('event_dtstart_parsed').setTextValue("Error contacting server");
				}
			ajax.ondone =
				function(parsed_time) {
					if (parsed_time.error == "0") {
						document.getElementById('event_dtstart_parsed').setTextValue(parsed_time.friendly_date);
						box = document.getElementById('event_dtstart');
						box.setStyle({ backgroundColor: "#e4f7e5", border: "1px solid #0b6111" });

						// next handle the recurrence...
						document.getElementById('recurrence_rate_yearly_help').setTextValue(parsed_time.recurrence_yearly);
						document.getElementById('recurrence_rate_monthly_help').setTextValue(parsed_time.recurrence_monthly);
						document.getElementById('recurrence_rate_monthly_nth_nday_help').setTextValue(parsed_time.recurrence_monthly_nth_nday);
						document.getElementById('recurrence_rate_weekly_help').setTextValue(parsed_time.recurrence_weekly);
					} else {
						document.getElementById('event_dtstart_parsed').setTextValue("");
						box = document.getElementById('event_dtstart');
						box.setStyle({ backgroundColor: "#F7E5E4", border: "1px solid #610B23" });

						// next handle the recurrence...
						document.getElementById('recurrence_rate_yearly_help').setTextValue("");
						document.getElementById('recurrence_rate_monthly_help').setTextValue("");
						document.getElementById('recurrence_rate_monthly_nth_nday_help').setTextValue("");
						document.getElementById('recurrence_rate_weekly_help').setTextValue("");
					}
					
				}
			ajax.post('<%= url_for(:controller => "events", :action => "ajax_parse_time" %>', params);
		}
		setTimeout(function() { event_dtstart_ajax() }, 1000);
	}

	// call our server and check dtend
	function event_dtend_ajax() {
		current_dtend = document.getElementById('event_dtend').getValue();

		// only do Ajax calls if the current dtstart != the last dtstart
		if (last_dtend != current_dtend) {
			var ajax = new Ajax();
			var params = { "time": current_dtend };
			last_dtend = document.getElementById('event_dtend').getValue();
			ajax.responseType = Ajax.JSON;
			ajax.onerror =
				function(error) {
					document.getElementById('event_dtend_parsed').setTextValue("Error contacting server");
				}
			ajax.ondone =
				function(parsed_time) {
					if (parsed_time.error == "0") {
						document.getElementById('event_dtend_parsed').setTextValue(parsed_time.friendly_date);
						box = document.getElementById('event_dtend');
						box.setStyle({ backgroundColor: "#e4f7e5", border: "1px solid #0b6111" });
					} else {
						document.getElementById('event_dtend_parsed').setTextValue("");
						box = document.getElementById('event_dtend');
						box.setStyle({ backgroundColor: "#F7E5E4", border: "1px solid #610B23" });
					}
					
				}
			ajax.post('<%= url_for(:controller => "events", :action => "ajax_parse_time" %>', params);
		}
		setTimeout(function() { event_dtend_ajax() }, 1000);
	}

	// script that runs every 1s to process dtstart
	setTimeout(function() { event_dtstart_ajax() }, 1000);
	setTimeout(function() { event_dtend_ajax() }, 1000);
</script>
<% 
	url = []
	method = nil
	if params[:place_id]
		if params[:id]
			url = country_state_city_place_event_path(params[:country_id], params[:state_id], params[:city_id], params[:place_id], params[:id])
			method = :update
		else
			url = country_state_city_place_events_path(params[:country_id], params[:state_id], params[:city_id], params[:place_id])
			method = :create
		end
	elsif params[:city_id]
		if params[:id]
			url = country_state_city_event_path(params[:country_id], params[:state_id], params[:city_id], params[:id])
			method = :update
		else
			url = country_state_city_events_path(params[:country_id], params[:state_id], params[:city_id])
			method = :create
		end
	end
%>
<% form_for url, :method => method do |f| %>
	<%= f.error_messages %>

	<%= hidden_field_tag "create_event", "1" %>
	<% if params["redirect"] %>
		<%= hidden_field_tag "redirect", true %>
		<%= hidden_field_tag "redirecturl", params[:redirecturl] %>
	<% end %>
	
	<table>
		<tr>
			<td>
				<%= f.label :summary, "Event Summary" %>
			</td>
			<td>
				<%= f.text_field :summary %>
			</td>
		</tr>
		<tr>
			<td>
				<%= f.label :description %>
			</td>
			<td>
				<%= f.text_field :description %>
			</td>
		</tr>
		<tr>
			<td>
				<%= f.label :start_time, "Start Time" %>
			</td>
			<td>
				<%= f.text_field :start_time %><br />
				<div id="event_dtstart_parsed">Type in a time such as "Monday at 5pm" or "Jan 6 2009 at 3pm"</div>
			</td>
		</tr>
		<tr>
			<td>
				<%= f.label :end_time, "End Time" %>
			</td>
			<td>
				<%= f.check_box :no_end_time, :onchange => "event_dtend_disable_handler();" %> This event does not have a specified ending time.<br />
				<%= f.text_field :end_time %><br />
				<div id="event_dtend_parsed">Type in a time such as "Monday at 5pm" or "Jan 6 2009 at 3pm"</div>
			</td>
		</tr>
		<tr>
			<td>
				<%= f.label :recurrence %>
			</td>
			<td>
				<%= render :partial => "recurrence_selector" %>
			</td>
		</tr>
	</table>
	<%= f.submit "Create Event" %>
<% end %>